def fractionAddition(expr):
    def gcd(a, b):
        while b: a, b = b, a % b
        return a
    def lcm(a, b):
        return a * b / gcd(a, b)
    def add(a, b):
        lcm_ab = lcm(a[1], b[1])
        return [a[0] * (lcm_ab / a[1]) + b[0] * (lcm_ab / b[1]), lcm_ab]
    def reduce(a):
        if a[0] == 0: return [0, 1]
        gcd_ab = gcd(a[0], a[1])
        return [a[0] / gcd_ab, a[1] / gcd_ab]
    expr = expr.replace('-', '+-').split('+')
    res = [0, 1]
    for i in expr:
        if i:
            res = add(res, [int(j) for j in i.split('/')])
    return '/'.join(map(str, reduce(res)))