from collections import defaultdict
from math import sqrt
import heapq
def kClosest(points,k):
    d = defaultdict(tuple)
    lst = []
    for point in points: 
        point_tuple = tuple(point)
        z = sqrt(point[0]**2 + point[1]**2)  # Correct calculation for distance
        d[z] = point_tuple
        lst.append(z)
    nlst =[]
    heapq.heapify(lst)
    print(lst)
    for i in range(k):
        nlst.append(d[heapq.heappop(lst)])
    return nlst


# print(kClosest([[1,3],[-2,2]],1)) # [-2,2]
# print(kClosest([[3,3],[5,-1],[-2,4]],2)) # [[3,3],[-2,4]]
print(kClosest([[1,0],[0,1]],2)) 

